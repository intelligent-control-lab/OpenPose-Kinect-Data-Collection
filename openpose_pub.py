import rospy, cv2
from openpose_msg.msg import Openpose
from sensor_msgs.msg import Image
import glob, json, os, time
from cv_bridge import CvBridge, CvBridgeError
from parameters import Parameters


def talker(json_path, img_path, open_path):
    """
    The ros publisher for data generated by the Openpose
    :param json_path: the path where the json files are written into,
                      the same as the path passed into the "--write-json"
                      argument in OpenPose
    :param img_path: the path where the rendered image files are stored,
                     the same path is passed into the "--write-images" argument
    :param open_path: the path where OpenPose is installed
    """
    bridge = CvBridge()
    for f in glob.glob(json_path + '/*'):
        os.remove(f)
    for f in glob.glob(img_path + '/*'):
        os.remove(f)
    # The Publisher for Openpose key point information
    pub = rospy.Publisher('openpose_img', Openpose, queue_size=2)
    # The Publisher for Openpose rendered image information
    pub_img = rospy.Publisher('openpose_out', Image, queue_size=2)
    rospy.init_node('openpose_ros', anonymous=True)
    rate = rospy.Rate(24)  # 20hz

    os.chdir(open_path)
    os.system("gnome-terminal -e 'bash -c \"./build/examples/openpose/openpose.bin "
              + "--write_json " + json_path + " --write_images " + img_path + " --display 0; exec bash\"'")

    x_prev = -1
    keypoints = Openpose()

    while not rospy.is_shutdown():
        # The index of the json file
        x = len(glob.glob(json_path + '/*')) - 2
        if x >= 0 and x > x_prev:
            # New data has been passed
            json_file = '/%012d_keypoints.json' % x
            file = open(json_path + json_file, 'r')
            f = json.load(file)
            img_file = '/%012d_rendered.png' % x
            if len(f['people']) != 0 and os.path.exists(img_path + img_file):
                kp = f['people'][0]['pose_keypoints_2d']
                img = cv2.imread(img_path + img_file)
                if img is not None:
                    # Making the Openpose Msg and Image instances
                    keypoints.data = [int(kp[j]) for j in range(len(kp))
                                      if j not in [3 * i + 2 for i in range(22)]]

                    image_message = bridge.cv2_to_imgmsg(img, encoding="rgb8")
                    # Stamping the time
                    keypoints.header.stamp = rospy.Time.now()
                    image_message.header.stamp = rospy.Time.now()
                    # Publish the keypoints
                    pub.publish(keypoints)
                    pub_img.publish(image_message)

                    os.remove(img_path + img_file)
                    rospy.loginfo('Published keypoints and image')
        x_prev = x
        rate.sleep()


if __name__ == '__main__':
    param_master = Parameters()
    try:
        talker(param_master.json_path, param_master.img_path,
               param_master.openpose_path)
    except rospy.ROSInterruptException:
        pass
